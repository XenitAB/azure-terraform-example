parameters:
  deployment: ""
  vmImage: ""
  environment: ""
  azureSubscription: ""

jobs:
- deployment: ${{ parameters.deployment }}
  condition: and(succeeded(), eq(variables['${{ parameters.environment }}EnvEnabled'], true))
  displayName: Deploy to ${{ parameters.environment }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  continueOnError: false
  environment: ${{ parameters.environment }}
  strategy: 
    runOnce:
      deploy:
        steps:
        - checkout: self
          displayName: Get sources

        - task: DownloadPipelineArtifact@2
          displayName: 'Download artifact'
          inputs:
            artifact: '${{ parameters.environment }}'
            path: '$(System.ArtifactsDirectory)'
            
        - task: AzureCLI@1
          displayName: 'Deploy task'
          inputs:
            azureSubscription: '${{ parameters.azureSubscription }}'
            addSpnToEnvironment: true
            scriptLocation: inlineScript
            inlineScript: "pwsh .ci/Invoke-PipelineTask.ps1 -tfFolderName '$(tfFolderName)' -azureDevOps -deploy -tfVersion $(tfVersion) -environmentShort ${{ parameters.environment }} -artifactPath '$(System.ArtifactsDirectory)'"
          env:
            tfEncPassword: $(terraformEncryptionSecret)